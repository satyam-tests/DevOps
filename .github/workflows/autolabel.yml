name: Auto Manage Labels

on:
  issue_comment:
    types: [created]

jobs:
  manage-labels:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up GitHub CLI (optimized installation)
      - name: Setup GitHub CLI
        uses: actions/setup-gh@v4

      # Step 3: Authenticate GitHub CLI
      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh auth setup-git

      # Step 4: Parse comment and manage labels
      - name: Manage Labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract comment body and issue number
          COMMENT_BODY=$(jq -r '.comment.body' "$GITHUB_EVENT_PATH")
          ISSUE_NUMBER=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")

          # Only proceed if the comment matches a valid command
          if [[ "$COMMENT_BODY" =~ ^/(label|remove)([[:space:]].+)?$ ]]; then
            COMMAND=$(echo "$COMMENT_BODY" | awk '{print $1}')
            LABEL=$(echo "$COMMENT_BODY" | sed 's/^\/[^ ]*[ ]*//')

            # Fetch existing labels once
            EXISTING_LABELS=$(gh issue view "$ISSUE_NUMBER" --json labels -q '.labels[].name')

            if [[ "$COMMAND" == "/label" ]]; then
              # Add label if it exists in the repository
              if gh label list --json name -q '.[].name' | grep -q "^$LABEL$"; then
                gh issue edit "$ISSUE_NUMBER" --add-label "$LABEL"
                echo "Label '$LABEL' added to issue #$ISSUE_NUMBER."
              else
                echo "Label '$LABEL' does not exist in the repository."
              fi
            elif [[ "$COMMAND" == "/remove" ]]; then
              # Remove label if it exists on the issue
              if echo "$EXISTING_LABELS" | grep -q "^$LABEL$"; then
                gh issue edit "$ISSUE_NUMBER" --remove-label "$LABEL"
                echo "Label '$LABEL' removed from issue #$ISSUE_NUMBER."
              else
                echo "Label '$LABEL' is not currently on the issue."
              fi
            fi
          else
            echo "No valid label command found in the comment."
          fi
